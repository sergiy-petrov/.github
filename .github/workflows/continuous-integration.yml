name: "Continuous Integration"

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      php-versions:
        description: "The PHP versions to use when running the job, omitt to auto-detect"
        default: "auto-detect"
        required: false
        type: "string"
      upcoming-releases:
        description: "Whether to include upcoming releases in the auto-detection"
        default: true
        required: false
        type: "boolean"
      php-extensions:
        description: "The php extensions to install, allowing composer to pass"
        default: "none, ctype, dom, json, mbstring, phar, simplexml, tokenizer, xml, xmlwriter, fileinfo"
        required: false
        type: "string"
      composer-root-version:
        description: "The version of the package being tested, in case of circular dependencies."
        required: false
        type: "string"
      composer-options:
        description: "Additional flags for the composer install command."
        default: "--prefer-dist"
        required: false
        type: "string"
      test-suite:
        description: "Test suite to run"
        default: "unit"
        required: false
        type: "string"

jobs:
  supported-versions-matrix:
    name: "Supported Versions Matrix"
    runs-on: "ubuntu-latest"
    outputs:
      extensions: "${{ steps.supported-versions-matrix.outputs.extensions }}"
      version: "${{ steps.supported-versions-matrix.outputs.version }}"
    steps:
      - uses: "actions/checkout@v5"
        if: "${{ inputs.php-versions == 'auto-detect' }}"

      - id: "supported-versions-detect"
        if: "${{ inputs.php-versions == 'auto-detect' }}"
        uses: "WyriHaximus/github-action-composer-php-versions-in-range@v1"
        with:
          upcomingReleases: "${{ inputs.upcoming-releases }}"
          nightly: "${{ inputs.upcoming-releases }}"

      - name: "Set PHP versions"
        env:
          inputVersions: "${{ inputs.php-versions }}"
          inputExtensions: "${{ inputs.php-extensions }}"
          detectedVersions: "${{ steps.supported-versions-detect.outputs.version }}"
          detectedExtensions: "${{ steps.supported-versions-detect.outputs.extensions }}"
        id: "supported-versions-matrix"
        shell: "bash"
        run: |
          ([[ $inputVersions == "auto-detect" ]] && echo "extensions=$detectedExtensions" || echo "extensions=$inputExtensions") >> $GITHUB_OUTPUT
          ([[ $inputVersions == "auto-detect" ]] && echo "version=$detectedVersions" || echo "version=$inputVersions") >> $GITHUB_OUTPUT

  tests:
    name: "Tests"

    runs-on: "ubuntu-latest"

    needs: "supported-versions-matrix"
    strategy:
      matrix:
        php-version: "${{ fromJson(needs.supported-versions-matrix.outputs.version) }}"
        dependencies:
          - "lowest"
          - "locked"
          - "highest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@2.35.5"
        with:
          coverage: "none"
          extensions: "${{ inputs.php-extensions }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Set COMPOSER_ROOT_VERSION"
        run: |
          echo "COMPOSER_ROOT_VERSION=${{ inputs.composer-root-version }}" >> $GITHUB_ENV
        if: "${{ inputs.composer-root-version }}"

      - name: "Remove platform requirement"
        run: "composer config --unset platform"
        if: "${{ matrix.dependencies == 'highest' }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m") # yamllint disable-line rule:quoted-strings

      - name: "Run tests with phpunit/phpunit"
        run: "vendor/bin/phpunit --colors=always --testsuite=${{ inputs.test-suite }} --no-coverage"
